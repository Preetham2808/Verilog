module shift_reg_piso(
input sdi,
input [3:0] d,
input pl;
input clk,
input reset_n,
output do
);

reg [3:0] piso;
wire [3:0] d_source;
assign d_source = pl ? d : (piso[2:0],sdi);
always@(posedge clk or negedge reset_n) begin
    if(!reset_n)
      piso<=4'b0000;
   else
     piso [3:0]<=d_source;
end
assign do = piso[3];
endmodule

module tb_piso();
reg sdi;
reg d;
reg pl;
reg clk;
reg reset_n;
wire do;

shift_reg_piso piso1(.sdi(sdi),.d(d),.pl(pl),.clk(clk),.reset_n(reset_n),.do(do));

always begin
#0.5;clk=~clk;
end

initial begin
#1;reset_n=0;pl=1;sdi=0;
#1.3;reset_n=1;
@(posedge clk);d=0101;
pl=1; @(posedge clk);pl=0;
repeat (5) @(posedge clk);
end
initial begin
#20 $stop;
end
endmodule
 